name: Build n8n and Create Docker Image

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ "master" ]  # Auto-trigger on push to master

env:
  IMAGE_NAME: n8n-custom
  IMAGE_TAG: latest

jobs:
  # Job 1: Build the application (creates compiled folder)
  build:
    name: Build n8n Application
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build n8n (creates compiled folder)
        run: node scripts/build-n8n.mjs
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Verify compiled folder exists
        run: |
          echo "Checking compiled folder..."
          test -d compiled
          echo "Compiled folder contents:"
          ls -la compiled/
          echo "Compiled folder size:"
          du -sh compiled/

      - name: Upload compiled artifacts
        uses: actions/upload-artifact@v4
        with:
          name: n8n-compiled-${{ github.sha }}
          path: compiled/
          retention-days: 7

    # Job 2: Build Docker image (depends on build job)
  dockerize:
    name: Build Docker Image
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies (for dockerize script)
        run: pnpm install --frozen-lockfile

      - name: Download compiled artifacts
        uses: actions/download-artifact@v4
        with:
          name: n8n-compiled-${{ github.sha }}
          path: compiled/

      - name: Verify compiled folder
        run: |
          echo "Verifying compiled folder after download..."
          test -d compiled
          ls -la compiled/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: node scripts/dockerize-n8n.mjs
        env:
          IMAGE_BASE_NAME: ghcr.io/lakshmi-narayana-k/${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ github.sha }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker push ghcr.io/lakshmi-narayana-k/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker tag ghcr.io/lakshmi-narayana-k/${{ env.IMAGE_NAME }}:${{ github.sha }} ghcr.io/lakshmi-narayana-k/${{ env.IMAGE_NAME }}:latest
          docker push ghcr.io/lakshmi-narayana-k/${{ env.IMAGE_NAME }}:latest

      - name: Output image information
        run: |
          echo "âœ… Docker image built and pushed successfully!"
          echo "Image: ghcr.io/lakshmi-narayana-k/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          echo "Latest: ghcr.io/lakshmi-narayana-k/${{ env.IMAGE_NAME }}:latest"
          echo ""
          echo "To pull the image:"
          echo "docker pull ghcr.io/lakshmi-narayana-k/${{ env.IMAGE_NAME }}:${{ github.sha }}"