name: Build n8n and Create Docker Image

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]

env:
  IMAGE_NAME: n8n-custom

jobs:
  build:
    name: Build n8n Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Normalize line endings
        run: |
          sudo apt-get update && sudo apt-get install -y dos2unix
          dos2unix docker/images/n8n/docker-entrypoint.sh || true

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.1

      - name: Setup Node.js (Node 20 LTS)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build n8n (creates compiled folder)
        run: node scripts/build-n8n.mjs
        env:
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Verify compiled folder
        run: |
          test -d compiled
          ls -la compiled | head -n 100
          du -sh compiled

      - name: Upload compiled artifacts
        uses: actions/upload-artifact@v4
        with:
          name: n8n-compiled-${{ github.sha }}
          path: compiled/
          retention-days: 7

  dockerize:
    name: Build & Push Docker Image
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Normalize entrypoint LF
        run: |
          sudo apt-get update && sudo apt-get install -y dos2unix
          dos2unix docker/images/n8n/docker-entrypoint.sh || true

      - name: Download compiled artifacts
        uses: actions/download-artifact@v4
        with:
          name: n8n-compiled-${{ github.sha }}
          path: compiled/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image (amd64)
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --build-arg NODE_VERSION=20 \
            --build-arg N8N_VERSION=snapshot \
            --build-arg LAUNCHER_VERSION=1.3.0 \
            -f docker/images/n8n/Dockerfile \
            -t ghcr.io/lakshmi-narayana-k/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            -t ghcr.io/lakshmi-narayana-k/${{ env.IMAGE_NAME }}:latest \
            --push \
            .
